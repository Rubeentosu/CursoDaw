//Hacemos la funcion ver enunciado para ver el enunciado del ejercicio
function verEnunciado(){
	let enunciado = "<h3>BUSCAMINAS</h3>\
	<p>Implementa el juego del buscaminas en JS.\
	Para ello, se definirÃ¡ un tablero, un array en 2d o matriz, con ğŸ“¦ y ğŸ’£ (busca el carÃ¡cter especial html para imprimir ese icono).<br>\
	A continuaciÃ³n el usuario, introducirÃ¡ una coordenada. Por ejemplo: 0,0.<br>\
	El programa mostrarÃ¡ si dicha coordenada estÃ¡ vacÃ­a ğŸ“¦ o contiene una mina ğŸ’£, mostrando el tablero cambiado para dicha acciÃ³n.<br>\
	La caja estÃ¡ vacÃ­a! Puedes seguir jugandoâ€¦<br>\
	ğŸ’¨ ğŸ“¦ ğŸ“¦<br>\
	ğŸ“¦ ğŸ“¦ ğŸ“¦<br>\
	ğŸ“¦ ğŸ“¦ ğŸ“¦<br>\
	La caja contiene una mina, GAME OVER!!<br>\
	ğŸ’¥ ğŸ“¦ ğŸ“¦<br>\
	ğŸ“¦ ğŸ“¦ ğŸ“¦<br>\
	ğŸ“¦ ğŸ“¦ ğŸ“¦<br>\
	En caso de que hubiese una mina, el juego terminarÃ­a mostrando el mensaje anterior en la parte destinada a tal efecto. En caso contrario, se le pedirÃ¡ al usuario otra coordenada.<br>\
	Adicionalmente, el juego termina si descubre todas las cajas vacÃ­as mostrando el tablero y el mensaje: No hay mÃ¡s cajas vacÃ­as, YOU ARE A WINNER!!!</p>"
	document.getElementById("enunciadoAE").innerHTML = enunciado;
}

// Tablero con cajas y una mina
let tableroConBomba = [
	['ğŸ“¦', 'ğŸ’£', 'ğŸ’£'],
	['ğŸ’£', 'ğŸ’£', 'ğŸ’£'],
	['ğŸ’£', 'ğŸ’£', 'ğŸ’£']
];

// Tablero sin bomba donde se mostrarÃ¡n los resultados
let tableroSinBomba = [
	['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦'],
	['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦'],
	['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦']
];

let cajasVacias = 0; // Contador de cajas vacÃ­as descubiertas
let totalCajas = 0;  // Total de cajas vacÃ­as en el tablero
let eligeBomba = false; // Indica si se ha encontrado una mina

// FunciÃ³n para iniciar el juego
function empezarJuego() {
	// Reinicia el tablero sin la bomba
	tableroSinBomba = [
		['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦'],
		['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦'],
		['ğŸ“¦', 'ğŸ“¦', 'ğŸ“¦']
	];

	// Reinicia contadores
	cajasVacias = 0;
	eligeBomba = false;
	coordenadasSeleccionadas = []; // Reinicia las coordenadas seleccionadas
	totalCajas = 0; // Reinicia el contador de cajas vacÃ­as

	// Contar el total de cajas vacÃ­as en el tablero con bombas
	for (let i = 0; i < tableroConBomba.length; i++) {
		for (let j = 0; j < tableroConBomba[i].length; j++) {
			if (tableroConBomba[i][j] === 'ğŸ“¦') {
				totalCajas++; // Incrementa el contador por cada caja vacÃ­a
			}
		}
	}
	document.getElementById("resolucionAE").innerHTML = mostrarTablero(tableroSinBomba);
}

// FunciÃ³n para mostrar el tablero
function mostrarTablero(tablero) {
	let resultado = "";
	// Recorre cada fila y columna del tablero
	for (let i = 0; i < tablero.length; i++) {
		for (let j = 0; j < tablero[i].length; j++) {
			resultado += tablero[i][j] + "\t"; // AÃ±ade cada elemento al resultado
		}
		resultado += "<br>";
	}
	return resultado;
}

let coordenadasSeleccionadas = []; // Array para guardar las coordenadas seleccionadas

// FunciÃ³n para continuar el juego
function continuarJuego() {
	if (eligeBomba) return 0; // Si se encontrÃ³ una mina, no hace nada mÃ¡s

	// Solicita al usuario que elija coordenadas
	let coordenadaY = parseInt(prompt("Elige la primera coordenada (0-2)"));
	let coordenadaX = parseInt(prompt("Elige la segunda coordenada (0-2)"));

	// Valida que las coordenadas estÃ©n dentro del rango permitido
	if (coordenadaY < 0 || coordenadaY > 2 || coordenadaX < 0 || coordenadaX > 2) {
		alert("Coordenadas invÃ¡lidas. Intenta de nuevo.");
		return;
	}

	// Verifica si la coordenada ya ha sido seleccionada
	let coordenadaYaSeleccionada = false;
	for (let i = 0; i < coordenadasSeleccionadas.length; i++) {
		if (coordenadasSeleccionadas[i][0] === coordenadaY && coordenadasSeleccionadas[i][1] === coordenadaX) {
			coordenadaYaSeleccionada = true; // Marca que la coordenada ya fue seleccionada
			break;
		}
	}

	if (coordenadaYaSeleccionada) {
		alert("Esta coordenada ya ha sido seleccionada. Intenta de nuevo.");
		return;
	}

	// Registra la coordenada seleccionada
	coordenadasSeleccionadas.push([coordenadaY, coordenadaX]);

	// Comprueba si hay una mina en la coordenada seleccionada
	if (tableroConBomba[coordenadaY][coordenadaX] === 'ğŸ’£') {
		tableroSinBomba[coordenadaY][coordenadaX] = 'ğŸ’¥';
		eligeBomba = true;

		let resolucion = "<i>La caja contiene una mina, <b>GAME OVER!!</i> <br>" + mostrarTablero(tableroSinBomba);
		document.getElementById("resolucionAE").innerHTML = resolucion;

	} else if (tableroConBomba[coordenadaY][coordenadaX] === 'ğŸ“¦') {
		tableroSinBomba[coordenadaY][coordenadaX] = 'ğŸ’¨';
		cajasVacias++; // Incrementa el contador de cajas vacÃ­as

		let resolucion = mostrarTablero(tableroSinBomba);
		document.getElementById("resolucionAE").innerHTML = resolucion;

		// Verifica si se han descubierto todas las cajas vacÃ­as y marca que el juego ya ha sido terminado
		if (cajasVacias === totalCajas) {
			//Recorro el tablero con la bomba para cambiar en el tablero sin bomba
			for (let i = 0; i < tableroConBomba.length; i++) {
				for (let j = 0; j < tableroConBomba[i].length; j++) {
					if (tableroConBomba[i][j] === 'ğŸ’£') {
						tableroSinBomba[i][j] = 'ğŸ’£';
					}
				}
			}
			resolucion = "<i>No hay mÃ¡s cajas vacÃ­as,<b>YOU ARE A WINNER!!!</b></b> <br>" + mostrarTablero(tableroSinBomba);
			document.getElementById("resolucionAE").innerHTML = resolucion;
			eligeBomba = true;
		}
	}
}


